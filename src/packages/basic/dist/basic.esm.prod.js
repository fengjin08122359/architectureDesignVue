class t{constructor(){this.judgeList=[]}add(t){this.judgeList.push(t)}remove(t){this.judgeList=this.judgeList.filter(e=>e.name!==t)}match(...t){var e=this.judgeList.map(e=>e.fun(t),[]),s=this.judgeList.map(t=>t);return new Promise(t=>{Promise.all(e).then(e=>{e.forEach((e,i)=>{e&&t(s[i].name)}),t("")})})}}class e{constructor(){this.datas=[]}add(t){this.datas.push(t)}remove(t){this.datas=this.datas.filter(e=>e.name!==t)}clear(){this.datas=[]}get(t=""){return this.datas.filter(e=>""===t||e.name===t)}find(t=""){var e=this.datas.find(e=>e.name===t),s=this.datas.find(t=>""===t.name);return e?e.data:s?s.data:null}}class s{constructor(){this.dataList=new e}collect(t){this.dataList.add({name:"errorCode",data:t})}get(){return this.dataList.get("errorCode").map(t=>t.data)}}class i{constructor(){this.handlers=[]}add(t){this.handlers.push(t)}remove(t){this.handlers=this.handlers.filter(e=>e.name!==t)}get(t,e=""){return this.handlers.filter(t=>""===e||t.name===e).map(e=>({name:e.name,res:e.fun(t)}))}}class a extends i{constructor(){super(),this.handlers=[]}addIntercept(t){this.add(t)}removeIntercept(t){this.remove(t)}getIntercept(t,e=""){return this.get(t,e).filter(t=>t.res).map(t=>t.name)}}class r{constructor(){this.dataList=new e}log(...t){this.dataList.add({name:"log",data:t})}error(...t){this.dataList.add({name:"error",data:t})}debug(...t){this.dataList.add({name:"debug",data:t})}info(...t){this.dataList.add({name:"info",data:t})}warn(...t){this.dataList.add({name:"warn",data:t})}get(t=""){return this.dataList.get(t).map(t=>t.data)}}class n{constructor(){this.timeout=null}do(t,e){null!==this.timeout&&clearTimeout(this.timeout),this.timeout=setTimeout(()=>{t.apply(this,arguments),this.timeout=null},e)}}class h{constructor(){this.timeout=null,this.lastTriggerTime=null,this.lastExecutedTime=null,this.executeOncePerWait=!1,this.immediate=!1}do(t,e){!this.executeOncePerWait&&(this.lastTriggerTime=Date.now());const s=this.immediate&&!this.timeout;this.timeout||(this.executeOncePerWait&&(this.lastExecutedTime=Date.now()),this.timeout=setTimeout(()=>{this.later(t,e,arguments)},e)),s&&(this.executeOncePerWait&&(this.lastExecutedTime=Date.now()),t.apply(this,arguments))}later(t,e,s){const i=Date.now()-((this.executeOncePerWait?this.lastExecutedTime:this.lastTriggerTime)||0);i<e&&i>0?setTimeout(()=>{this.later(t,e,s)},e-i):(this.immediate||(this.executeOncePerWait&&(this.lastExecutedTime=Date.now()),t.apply(this,s)),this.timeout=null)}}class d{constructor(){this.EventList=new Array}static getInstance(){return this.instance=this.instance||new d,this.instance}addEventListener(t,e){this.EventList.push({name:t,listener:e})}removeEventListener(t){this.EventList=this.EventList.filter(e=>e.name!==t)}dispatchEvent(t,e){this.EventList.filter(e=>e.name===t).map(t=>t.listener).forEach(t=>t(e))}}class o{constructor(){this.observers=[]}registerObserver(t){this.observers.push(t)}removeObserver(t){let e=this.observers.indexOf(t);-1!==e&&this.observers.splice(e,1)}notifyObservers(t,e=this.observers){for(let s of e)s.update(t)}}class c{constructor(){this.storage={}}get(t){return this.storage[t]}set(t,e){this.storage[t]=e}remove(t){this.storage[t]=void 0}clear(){this.storage={}}}export{t as Auth,e as DataList,n as Debounce,s as ErrorCode,d as EventDispatcher,i as HanderList,a as Intercept,r as Log,o as ObserverSubject,c as Storage,h as Throttle};
